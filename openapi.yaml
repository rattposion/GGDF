openapi: 3.0.0
info:
  title: Marketplace Digital API
  version: 1.0.0
  description: API RESTful para marketplace digital de skins, contas, keys, jogos, assinaturas e serviços.
servers:
  - url: http://localhost:3000/api
    description: Local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required: [email, password]
    AuthRegister:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
      required: [email, password, username]
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        type:
          type: string
        categoryId:
          type: string
        images:
          type: array
          items:
            type: string
        stock:
          type: integer
        active:
          type: boolean
paths:
  /auth/login:
    post:
      summary: Login por e-mail/senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogin'
      responses:
        '200':
          description: Login bem-sucedido
        '401':
          description: Credenciais inválidas
  /auth/register:
    post:
      summary: Registro de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegister'
      responses:
        '201':
          description: Usuário registrado
        '409':
          description: E-mail já cadastrado
  /products:
    get:
      summary: Listar produtos
      parameters:
        - in: query
          name: tipo
          schema:
            type: string
        - in: query
          name: categoriaId
          schema:
            type: string
      responses:
        '200':
          description: Lista de produtos
    post:
      summary: Criar produto
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Produto criado
  /products/{id}:
    get:
      summary: Detalhes do produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produto encontrado
        '404':
          description: Produto não encontrado
    put:
      summary: Atualizar produto
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Produto atualizado
    delete:
      summary: Remover produto
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Produto removido
# ... (continuação para categorias, pedidos, entregas, avaliações, notificações, perguntas, chat, admin, logs, upload) 