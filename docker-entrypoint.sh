#!/bin/sh

# ========================================
# Script de entrada para Docker GGDF Backend - Railway
# ========================================

set -e

echo "üöÄ Iniciando GGDF Backend no Railway..."

# Verificar se DATABASE_URL est√° configurada
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå DATABASE_URL n√£o configurada!"
    exit 1
fi

echo "‚úÖ DATABASE_URL configurada: ${DATABASE_URL:0:50}..."

# Verificar se OpenSSL est√° instalado
if ! command -v openssl &> /dev/null; then
    echo "‚ùå OpenSSL n√£o encontrado!"
    exit 1
fi

echo "‚úÖ OpenSSL encontrado"

# Verificar se NEXTAUTH_SECRET est√° configurada
if [ -z "$NEXTAUTH_SECRET" ]; then
    echo "‚ùå NEXTAUTH_SECRET n√£o configurada!"
    exit 1
fi

echo "‚úÖ NEXTAUTH_SECRET configurada"

# Gerar cliente Prisma
echo "üîß Gerando cliente Prisma..."
npx prisma generate

# Sincronizar banco de dados (Railway usa db push)
echo "üóÑÔ∏è Sincronizando banco de dados..."
npx prisma db push --accept-data-loss

# Verificar se a sincroniza√ß√£o foi bem-sucedida
if [ $? -eq 0 ]; then
    echo "‚úÖ Banco de dados sincronizado com sucesso"
else
    echo "‚ùå Erro ao sincronizar banco de dados"
    exit 1
fi

# Executar seed se necess√°rio
if [ "$RUN_SEED" = "true" ]; then
    echo "üå± Executando seed do banco de dados..."
    npm run db:seed
fi

# Iniciar Steam Bot se necess√°rio
if [ "$START_STEAM_BOT" = "true" ]; then
    echo "ü§ñ Iniciando Steam Bot em background..."
    npm run bot:start &
fi

echo "‚úÖ Backend pronto! Iniciando aplica√ß√£o..."

# Executar comando passado
exec "$@" 